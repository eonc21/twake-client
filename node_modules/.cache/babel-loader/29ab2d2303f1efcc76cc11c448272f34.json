{"ast":null,"code":"var _jsxFileName = \"/home/elinor/Desktop/test/twake-client/src/components/Wrapper.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../App.css';\nimport Input from './Input';\nimport * as htmlToImage from 'html-to-image';\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image';\nimport Tweet from './Tweet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Wrapper = () => {\n  _s();\n\n  const defaultTweet = {\n    text: \"I am the tweet. Change me.\",\n    name: \"AnonUser\",\n    username: \"anonUser_\"\n  };\n\n  const downloadJpeg = () => {\n    htmlToImage.toJpeg(document.getElementsByClassName('tweet')[0], {\n      quality: 0.95\n    }).then(function (dataUrl) {\n      var link = document.createElement('a');\n      link.download = 'my-image-name.jpeg';\n      link.href = dataUrl;\n      link.click();\n    });\n    console.log(\"henlo\");\n  };\n\n  const [tweet, setTweet] = useState(defaultTweet);\n\n  const handleTextChange = text => {\n    setTweet({ ...tweet,\n      text\n    });\n  };\n\n  const handleUsernameChange = username => {\n    setTweet({ ...tweet,\n      username\n    });\n  };\n\n  const handleNameChange = name => {\n    setTweet({ ...tweet,\n      name\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      handleTextChange: handleTextChange,\n      handleNameChange: handleNameChange,\n      handleUsernameChange: handleUsernameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), tweet && /*#__PURE__*/_jsxDEV(Tweet, {\n      id: \"tweet\",\n      tweet: tweet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: downloadJpeg,\n      style: {\n        width: 150,\n        height: 50,\n        position: \"absolute\",\n        bottom: 100\n      },\n      children: \"Export fake tweet as jpeg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Wrapper, \"DKqLoR4sudmoZe+iXm+nXaYwnMM=\");\n\n_c = Wrapper;\nexport default Wrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wrapper\");","map":{"version":3,"sources":["/home/elinor/Desktop/test/twake-client/src/components/Wrapper.jsx"],"names":["React","useState","Input","htmlToImage","toPng","toJpeg","toBlob","toPixelData","toSvg","Tweet","Wrapper","defaultTweet","text","name","username","downloadJpeg","document","getElementsByClassName","quality","then","dataUrl","link","createElement","download","href","click","console","log","tweet","setTweet","handleTextChange","handleUsernameChange","handleNameChange","width","height","position","bottom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,WAAhC,EAA6CC,KAA7C,QAA0D,eAA1D;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEzB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,IAAI,EAAE,4BADW;AAEjBC,IAAAA,IAAI,EAAE,UAFW;AAGjBC,IAAAA,QAAQ,EAAE;AAHO,GAArB;;AAOA,QAAMC,YAAY,GAAG,MAAM;AACvBZ,IAAAA,WAAW,CAACE,MAAZ,CAAmBW,QAAQ,CAACC,sBAAT,CAAgC,OAAhC,EAAyC,CAAzC,CAAnB,EAAgE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAhE,EACCC,IADD,CACM,UAAUC,OAAV,EAAmB;AACvB,UAAIC,IAAI,GAAGL,QAAQ,CAACM,aAAT,CAAuB,GAAvB,CAAX;AACAD,MAAAA,IAAI,CAACE,QAAL,GAAgB,oBAAhB;AACAF,MAAAA,IAAI,CAACG,IAAL,GAAYJ,OAAZ;AACAC,MAAAA,IAAI,CAACI,KAAL;AACD,KAND;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEH,GAVD;;AAaA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,CAACU,YAAD,CAAlC;;AAEA,QAAMmB,gBAAgB,GAAIlB,IAAD,IAAU;AAC/BiB,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWhB,MAAAA;AAAX,KAAD,CAAR;AAEH,GAHD;;AAKA,QAAMmB,oBAAoB,GAAIjB,QAAD,IAAc;AACvCe,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWd,MAAAA;AAAX,KAAD,CAAR;AAEH,GAHD;;AAKA,QAAMkB,gBAAgB,GAAInB,IAAD,IAAU;AAC/BgB,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWf,MAAAA;AAAX,KAAD,CAAR;AAEH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,KAAD;AACI,MAAA,gBAAgB,EAAEiB,gBADtB;AAEI,MAAA,gBAAgB,EAAEE,gBAFtB;AAGI,MAAA,oBAAoB,EAAED;AAH1B;AAAA;AAAA;AAAA;AAAA,YADJ,EAMKH,KAAK,iBAAI,QAAC,KAAD;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,KAAK,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA,YANd,eAQI;AAAQ,MAAA,OAAO,EAAEb,YAAjB;AAA+B,MAAA,KAAK,EAAE;AAACkB,QAAAA,KAAK,EAAE,GAAR;AAAaC,QAAAA,MAAM,EAAE,EAArB;AAAyBC,QAAAA,QAAQ,EAAE,UAAnC;AAA+CC,QAAAA,MAAM,EAAE;AAAvD,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CApDM;;GAAM1B,O;;KAAAA,O;AAsDb,eAAeA,OAAf","sourcesContent":["import React, {useState} from 'react'\nimport '../App.css';\nimport Input from './Input'\nimport * as htmlToImage from 'html-to-image';\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image';\nimport Tweet from './Tweet'\n\nexport const Wrapper = () => {\n\n    const defaultTweet = {\n        text: \"I am the tweet. Change me.\",\n        name: \"AnonUser\",\n        username: \"anonUser_\"\n\n    }\n\n    const downloadJpeg = () => {\n        htmlToImage.toJpeg(document.getElementsByClassName('tweet')[0], { quality: 0.95 })\n        .then(function (dataUrl) {\n          var link = document.createElement('a');\n          link.download = 'my-image-name.jpeg';\n          link.href = dataUrl;\n          link.click();\n        });\n        console.log(\"henlo\");\n\n    }\n    \n\n    const [tweet, setTweet] = useState(defaultTweet)\n\n    const handleTextChange = (text) => {\n        setTweet({...tweet, text})\n\n    }\n\n    const handleUsernameChange = (username) => {\n        setTweet({...tweet, username})\n\n    }\n\n    const handleNameChange = (name) => {\n        setTweet({...tweet, name})\n\n    }\n\n    return (\n        <div className='container'>\n            <Input \n                handleTextChange={handleTextChange}\n                handleNameChange={handleNameChange}\n                handleUsernameChange={handleUsernameChange}\n                />\n            {tweet && <Tweet id=\"tweet\" tweet={tweet}/>}\n\n            <button onClick={downloadJpeg} style={{width: 150, height: 50, position: \"absolute\", bottom: 100}}>Export fake tweet as jpeg</button>\n\n        </div>\n    )\n}\n\nexport default Wrapper\n"]},"metadata":{},"sourceType":"module"}